[
    {
        "id": "The Turing Test",
        "year": "1950",
        "desc": "In his 1950 paper \"Computing Machinery and Intelligence\" Alan Turing poses the question \"Can machines think?\" and proposes to interpret it in terms of an \"imitation game\". In this game an interrogator must decide whether the agent in the other room is a man or a machine. He is only allowed to communicate with him or it via typed print. This game is now known as the Turing Test."
    },
    {
        "id": "Syntactic Structures",
        "year": "1957",
        "desc": "Noam Chomsky publishes \"Syntactic Structures\", in which he describes Phrase Structure Grammars and introduces Transformational Grammar. This is the start of modern linguistics.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Syntactic_Structures"
        },
        "dependencyOf": ["thoughttreasure"]
    },
    {
      "id": "Lisp",
      "year": "1958",
      "desc": "Lisp was invented by John McCarthy. The favored programming language for AI research.",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Lisp_(programming_language)"
      },
      "dependencyOf": ["shrdlu", "lunar", "team", "c-phrase"]
    },
    {
        "id": "Programs with common sense",
        "year": "1959",
        "desc": "John McCarthy wrote the influential paper 'Programs with common sense'. The new idea was to use formal languages to solve ordinary commonsense reasoning, whereas logic was used before only to represent mathematical truths. The program to be written, 'Advice Taker', was to be a joint project with Marvin Minsky, but it was never completed.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Advice_taker"
        }
    },
    {
        "id": "Speech Acts",
        "year": "1962",
        "desc": "Speech Acts: J.L. Austin showed in his \"How to do things with words\" that sentences are not just conveyors of declarative meanings that are true or false. They may also be actions in themselves. A sentence may inquire, command, promise, etc. A speech act may require pragmatic information to be interpreted.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Speech_act"
        }
    },
    {
        "id": "events",
        "year": "1967",
        "desc": "Donald Davidson first explicitly represents events as objects in a formal representation in his paper 'The logical form of action sentences'"
    },
    {
        "id": "Case Grammar",
        "year": "1968",
        "desc": "Case Grammar was developed by Charles J. Fillmore. It emphasises semantic roles of a sentence, Agent, Object, Benefactor, Location or Instrument.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Case_grammar"
        },
        "dependencyOf": ["eufid"]
    },
    {
        "id": "Augmented Transition Network",
        "year": "1970",
        "desc": "W.A. Woods invents the Augmented Transition Network (ATM), a finite state machine extension to parse natural language sentences.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Augmented_transition_network"
        },
        "dependencyOf": ["lunar"]
    },
    {
        "id": "Relational Databases",
        "year": "1970",
        "desc": "E.F. Codd (IBM) publishes \"A Relational Model of Data for Large Shared Data Banks\". The basis of modern relational databases.",
        "dependencyOf": ["rendezvous"]
    },
    {
        "id": "Micro-Planner",
        "year": "1968",
        "desc": "Planner was created by Carl Hewitt (MIT), the first procedural programming language, implemented in Lisp. It applied forward and backward chaining. It was used by SHRDLU.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Planner_programming_language"
        },
        "dependencyOf": ["shrdlu"]
    },
    {
        "id": "Prolog",
        "year": "1972",
        "desc": "Prolog was created by Alain Colmerauer and Philippe Roussel, based on Robert Kowalski's procedural interpretation of Horn clauses."
    },
    {
        "id": "Montague Grammar",
        "year": "1973",
        "desc": "Montague publishes \"The Proper Treatment of Quantification in Ordinary English\" (also known as PTQ), the first formal treatment of the semantics of natural languages. Since this article requires a good deal of prior knowledge of logic, you may wish to approach this article through Dowty et al's \"Introduction to Montague Semantics\"."
    },
    {
        "id": "CD",
        "year": "1975",
        "desc": "Roger Schank introduces \"Conceptual Dependency Theory\", a theory for natural language understanding that uses fundamental concepts like ATRANS, PTRANS and MTRANS to denote abstract transfers. "
    },
    {
        "id": "SCRIPTS",
        "year": "1975",
        "desc": "Roger Schank and Robert P. Abelson introduce Script Theory in AI. It is a psychological theory by Silvan Tomkins that explains how people know how to react in all sorts of stereotypical situations"
    },
    {
        "id": "Society Of Mind",
        "year": "1986",
        "desc": "The book \"The Society of Mind\", written by Marvin Minsky, was published.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Society_of_Mind"
        },
        "dependencyOf": ["thoughttreasure"]
    },
    {
      "id": "BDI",
      "year": "1987",
      "desc": "The book \"Intention, Plans, and Practical Reason\", written by Michael Bratman, was published. It describes the BDI model (Belief-Desire-Intention) of action selection.",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Belief-desire-intention_software_model"
      },
      "dependencyOf": ["calo"]
    }

]
