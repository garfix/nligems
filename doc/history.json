[
    {
        "id": "The Turing Test",
        "year": "1950",
        "desc": "In his 1950 paper \"Computing Machinery and Intelligence\" Alan Turing poses the question \"Can machines think?\" and proposes to interpret it in terms of an \"imitation game\". In this game an interrogator must decide whether the agent in the other room is a man or a machine. He is only allowed to communicate with him or it via typed print. This game is now known as the Turing Test."
    },
    {
        "id": "Syntactic Structures",
        "year": "1957",
        "desc": "Noam Chomsky publishes \"Syntactic Structures\", in which he describes Phrase Structure Grammars and introduces Transformational Grammar. This is the start of modern linguistics.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Syntactic_Structures"
        },
        "dependencyOf": ["thoughttreasure"]
    },
    {
      "id": "Lisp",
      "year": "1958",
      "desc": "Lisp was invented by John McCarthy. The favored programming language for AI research.",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Lisp_(programming_language)"
      },
      "dependencyOf": ["shrdlu", "lunar", "team", "c-phrase"]
    },
    {
        "id": "Case Grammar",
        "year": "1968",
        "desc": "Case Grammar was developed by Charles J. Fillmore. It emphasises semantic roles of a sentence, Agent, Object, Benefactor, Location or Instrument.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Case_grammar"
        },
        "dependencyOf": ["eufid"]
    },
    {
        "id": "Augmented Transition Network",
        "year": "1970",
        "desc": "W.A. Woods invents the Augmented Transition Network (ATM), a finite state machine extension to parse natural language sentences.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Augmented_transition_network"
        },
        "dependencyOf": ["lunar"]
    },
    {
        "id": "Relational Databases",
        "year": "1970",
        "desc": "E.F. Codd (IBM) publishes \"A Relational Model of Data for Large Shared Data Banks\". The basis of modern relational databases.",
        "dependencyOf": ["rendezvous"]
    },
    {
        "id": "Micro-Planner",
        "year": "1968",
        "desc": "Planner was created by Carl Hewitt (MIT), a theorem proving, procedural, programming language. It was used by SHRDLU.",
        "links": {
            "Wikipedia": "http://en.wikipedia.org/wiki/Planner_programming_language"
        },
        "dependencyOf": ["shrdlu"]
    },
    {
        "id": "Prolog",
        "year": "1972",
        "desc": "Prolog was created by Alain Colmerauer and Philippe Roussel, based on Robert Kowalski's procedural interpretation of Horn clauses."
    },
    {
        "id": "Montague Grammar",
        "year": "1973",
        "desc": "Montague publishes \"The Proper Treatment of Quantification in Ordinary English\" (also known as PTQ), the first formal treatment of the semantics of natural languages. Since this article requires a good deal of prior knowledge of logic, you may wish to approach this article through Dowty et al's \"Introduction to Montague Semantics\"."
    },
    {
      "id": "DEC-10 Prolog",
      "year": "1977",
      "desc": "David H. D. Warren and Fernando Pereira created the first Prolog compiler, for DEC-10.",
      "dependencyOf": ["chat-80"]
    },
    {
      "id": "Veronica Dahl's systems",
      "year": "1977",
      "desc": "Veronica Dahl's question-answering systems for French and Spanish, written in Prolog using MG (metamorphosis grammar).",
      "dependencyOf": ["chat-80"]
    },
    {
      "id": "Definite Clause Grammars",
      "year": "1980",
      "desc": "Definite Clause Grammars: David H. D. Warren and Fernando Pereira created DCG, a grammar specially suited for Prolog, a specialisation of Colmeraur's metamorphosis grammar (MG)",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Definite_clause_grammar"
      },
      "dependencyOf": ["chat-80"]
    },
    {
      "id": "WAM",
      "year": "1983",
      "desc": "David H. D. Warren designed an abstract machine for the execution of Prolog consisting of a memory architecture and an instruction set. This design became known as the Warren Abstract Machine (WAM) and has become the de facto standard target for Prolog compilers.",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Prolog"
      }
    },
    {
        "id": "CYC",
        "year": "1984",
        "desc": "Cyc commonsense knowledge base started by Douglas Lenat",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Cyc",
            "Cyc home": "http://www.cyc.com/"
        },
        "dependencyOf": ["thoughttreasure"]
    },
    {
        "id": "Society Of Mind",
        "year": "1986",
        "desc": "The book \"The Society of Mind\", written by Marvin Minsky, was published.",
        "links": {
            "Wikipedia": "https://en.wikipedia.org/wiki/Society_of_Mind"
        },
        "dependencyOf": ["thoughttreasure"]
    },
    {
      "id": "BDI",
      "year": "1987",
      "desc": "The book \"Intention, Plans, and Practical Reason\", written by Michael Bratman, was published. It describes the BDI model (Belief-Desire-Intention) of action selection.",
      "links": {
        "Wikipedia": "https://en.wikipedia.org/wiki/Belief-desire-intention_software_model"
      },
      "dependencyOf": ["calo"]
    }

]
