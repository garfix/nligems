NAME: C-PHRASE
FIRST-YEAR: 2008
LAST-YEAR: 2014
CONTRIBUTORS: Michael Minock
INSTITUTIONS: Umeå University
INFLUENCED-BY:
NAT-LANGS: English
PROG-LANGS: Lisp
SOURCE-CODE: https://code.google.com/p/c-phrase/
KB-TYPE: relational
KB-TYPE-DESC:
SENTENCE-TYPES: question
ARTICLES: C-Phrase: A system for building robust natural language interfaces to databases
BOOKS:
GEM-IMAGE: blue-sapphire.png
NAME-DESC: "Thus analysis components must be robust, seeking out near misses when input is less than ideal and the system must be adaptable, making it easy for authors to patch running systems to catch unanticipated phrasings. The name C-Phrase is derived from ‘catch phrase’, which we interpret literally as ‘catching phrases’."
LONG-DESC:

ANALYSIS: Semantics-based
SEMANTIC-GRAMMAR: yes
DO-DIALOG: yes
NEW-WORDS:
MULTI-DB: no
DO-UNGRAMMATICAL:
META-SELF:
META-KB:

NP: yes
VP: yes
PP: yes
DP:
ADVP:
ADJP:
RC:
NEG:
CONJ:
ANAPHORA:
AUX:
MODALS:
COMP-EXP:
PASSIVES:
CLEFTS:
THERE:
ELLIPSIS:

DO-TOKENIZE: yes
TOKENIZE-HEADER:
DO-DICT-LOOKUP: yes
DO-MORPH-ANA:
DO-WORD-SEPA:
DO-SPELL-CORR: yes
DO-OPEN-ENDED: yes
DO-PROP-NAME-KB: yes
DO-PROP-NAME-MAT:
DO-QUOTED-STRINGS: yes

PARSE-HEADER:
GRAMMAR-TYPE: Synchronous context-free grammars
PARSER-TYPE: A fuzzy chart parser

SYNTACTIC-FORM-TYPE:

INTERPRET-HEADER:
DO-SEMANTIC-ATTACH: yes
DO-MODIFIER-ATTACH:
DO-CONJUNCTION-DISJUNCTION:
DO-NOMINAL-COMPOUNDS:
DO-SEMANTIC-COMP: yes
SEMANTIC-COMP-TYPE: lambda calculus
DO-SEMANTIC-CONFLICT:
DO-QUANTIFIER-SCOPE:
DO-ANAPHORA-RESOL:
DO-PLAUSIB-JUDGE:
DO-UNIFORM-REWRITES:
COOPERATIVE-RESPONSES:

SEMANTIC-FORM-TYPE: relational
SEMANTIC-FORM-DESC: Tuple calculus with extensions
EVENT-BASED: no
TEMPORAL:
PROPER-NOUN-CNST:
ONTOLOGY-USED: no
STD-ONTOLOGY:

CONVERT-HEADER:
DO-SYNTACTIC-REWRITE: yes
DO-OPTIMIZE-QUERY:
CONVERT-TYPE:
KB-METADATA:
DO-INFORMATION-RESTRUCT:

KB-LANGS: SQL
KB-AGGREGATIONS: yes

EXECUTE-HEADER: An RDBMS (notably PostgreSQL)
DO-EXECUTE: yes
DO-LOGICAL-REASON:

GENERATE-HEADER:
DO-GENERATE:
PARAPHRASE-QUERY: